from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.core.order.models import ObtainingMethod, Status
from src.core.user.models import Role


def get_role_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏."""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text="–ë–∞—Ä–∏—Å—Ç–∞", callback_data=f"role:{Role.BARISTA.value}"
        ),
        InlineKeyboardButton(text="–ö–ª–∏–µ–Ω—Ç", callback_data=f"role:{Role.CLIENT.value}"),
    )
    return builder.as_markup()


def get_categories_keyboard(categories: list) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    builder = InlineKeyboardBuilder()
    for category in categories:
        builder.add(
            InlineKeyboardButton(
                text=category.name, callback_data=f"category:{category.id}"
            )
        )
    builder.add(InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart"))

    builder.adjust(2)
    return builder.as_markup()


def get_positions_keyboard(positions: list, category_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()
    for position in positions:
        builder.add(
            InlineKeyboardButton(
                text=f"{position.name} - {position.price}‚ÇΩ",
                callback_data=f"position:{position.id}",
            )
        )
    builder.add(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="categories"),
        InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart"),
    )
    builder.adjust(2)
    return builder.as_markup()


def get_quantity_keyboard(position_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞."""
    builder = InlineKeyboardBuilder()
    for i in range(1, 6):
        builder.add(
            InlineKeyboardButton(
                text=str(i), callback_data=f"quantity:{position_id}:{i}"
            )
        )
    builder.add(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_positions"))
    builder.adjust(5, 1)
    return builder.as_markup()


def get_cart_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ—Ä–∑–∏–Ω—ã."""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å", callback_data="clear_cart"),
        InlineKeyboardButton(text="‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å", callback_data="checkout"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ö –º–µ–Ω—é", callback_data="categories"),
    )
    builder.adjust(2)
    return builder.as_markup()


def get_obtaining_method_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –ø–æ–ª—É—á–µ–Ω–∏—è."""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text="–° —Å–æ–±–æ–π",
            callback_data=f"obtaining_method:{ObtainingMethod.TAKEAWAY.value}",
        ),
        InlineKeyboardButton(
            text="–ù–∞ –º–µ—Å—Ç–µ",
            callback_data=f"obtaining_method:{ObtainingMethod.INPLACE.value}",
        ),
        InlineKeyboardButton(
            text="–î–æ—Å—Ç–∞–≤–∫–∞",
            callback_data=f"obtaining_method:{ObtainingMethod.DELIVERY.value}",
        ),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="cart"),
    )
    builder.adjust(2)
    return builder.as_markup()


def get_order_status_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞."""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text="‚úÖ –ì–æ—Ç–æ–≤", callback_data=f"status:{order_id}:{Status.COMPLETED.value}"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω—ë–Ω",
            callback_data=f"status:{order_id}:{Status.CANCELLED.value}",
        ),
    )
    return builder.as_markup()


def get_weight_keyboard(position_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤–µ—Å–∞."""
    builder = InlineKeyboardBuilder()
    weights = [100, 200, 300, 400, 500]  # –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–µ—Å–∞
    for weight in weights:
        builder.add(
            InlineKeyboardButton(
                text=f"{weight}–≥", callback_data=f"weight:{position_id}:{weight}"
            )
        )
    builder.add(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_positions"))
    builder.adjust(3, 2, 1)
    return builder.as_markup()
